/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package forms;

import dao.ContatoDao;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import logica.Contato;

/**
 *
 * @author DEBYREGIS
 */
public class jTAgendaContatos extends javax.swing.JFrame {
    //Preenchendo as colunas da tabela
    private String[] colunas = new String[]{"Id", "Nome", "End", "E-mail"}; 
    DefaultTableModel tmContato = new DefaultTableModel(null, colunas);
    List<Contato> contatos;
    ListSelectionModel lsmContato;
    
    /**
     * Creates new form jTAgendaContatos
     */
    public jTAgendaContatos() {
        initComponents();
        desabilitaCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPGeral = new javax.swing.JPanel();
        jPPesquisar = new javax.swing.JPanel();
        jTPesquisa = new javax.swing.JTextField();
        jBPesquisar = new javax.swing.JButton();
        jPForm = new javax.swing.JPanel();
        jLId = new javax.swing.JLabel();
        jTId = new javax.swing.JTextField();
        jLNome = new javax.swing.JLabel();
        jTNome = new javax.swing.JTextField();
        jLEnd = new javax.swing.JLabel();
        jTEndereco = new javax.swing.JTextField();
        jLEmail = new javax.swing.JLabel();
        jTEmail = new javax.swing.JTextField();
        jTSexo = new javax.swing.JTextField();
        jLFone = new javax.swing.JLabel();
        jTFone = new javax.swing.JTextField();
        jLSexo = new javax.swing.JLabel();
        jPButton = new javax.swing.JPanel();
        jBNovo = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBSalvar = new javax.swing.JButton();
        jBSair = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTTabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPGeral.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de contatos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Aharoni", 0, 18))); // NOI18N

        jPPesquisar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar contato", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jBPesquisar.setText("Pesquisar");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPPesquisarLayout = new javax.swing.GroupLayout(jPPesquisar);
        jPPesquisar.setLayout(jPPesquisarLayout);
        jPPesquisarLayout.setHorizontalGroup(
            jPPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPesquisarLayout.createSequentialGroup()
                .addComponent(jTPesquisa)
                .addGap(18, 18, 18)
                .addComponent(jBPesquisar))
        );
        jPPesquisarLayout.setVerticalGroup(
            jPPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPesquisarLayout.createSequentialGroup()
                .addGroup(jPPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisar))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPForm.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do contato"));

        jLId.setText("Id:");

        jLNome.setText("Nome:");

        jLEnd.setText("End:");

        jLEmail.setText("E-mail:");

        jLFone.setText("Fone:");

        jLSexo.setText("Sexo:");

        javax.swing.GroupLayout jPFormLayout = new javax.swing.GroupLayout(jPForm);
        jPForm.setLayout(jPFormLayout);
        jPFormLayout.setHorizontalGroup(
            jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFormLayout.createSequentialGroup()
                .addGroup(jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLId)
                    .addComponent(jLNome)
                    .addComponent(jLEnd)
                    .addComponent(jLEmail)
                    .addComponent(jLFone)
                    .addComponent(jLSexo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTId, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFone, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTNome, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                    .addComponent(jTEndereco)
                    .addComponent(jTEmail)))
        );
        jPFormLayout.setVerticalGroup(
            jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPFormLayout.createSequentialGroup()
                .addGroup(jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNome)
                    .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEnd)
                    .addComponent(jTEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEmail)
                    .addComponent(jTEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLFone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLSexo))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPFormLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTEmail, jTEndereco, jTFone, jTId, jTNome, jTSexo});

        jPButton.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jBNovo.setText("Novo");
        jBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoActionPerformed(evt);
            }
        });

        jBExcluir.setText("Excluir");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBSalvar.setText("Salvar");
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        jBSair.setText("Sair");
        jBSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSairActionPerformed(evt);
            }
        });

        jBAlterar.setText("Alterar");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPButtonLayout = new javax.swing.GroupLayout(jPButton);
        jPButton.setLayout(jPButtonLayout);
        jPButtonLayout.setHorizontalGroup(
            jPButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPButtonLayout.createSequentialGroup()
                .addComponent(jBNovo)
                .addGap(59, 59, 59)
                .addComponent(jBAlterar)
                .addGap(58, 58, 58)
                .addComponent(jBExcluir)
                .addGap(64, 64, 64)
                .addComponent(jBSalvar)
                .addGap(60, 60, 60)
                .addComponent(jBSair))
        );

        jPButtonLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBAlterar, jBExcluir, jBNovo, jBSair, jBSalvar});

        jPButtonLayout.setVerticalGroup(
            jPButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBNovo)
                    .addComponent(jBExcluir)
                    .addComponent(jBSalvar)
                    .addComponent(jBSair)
                    .addComponent(jBAlterar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPButtonLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBAlterar, jBExcluir, jBNovo, jBSair, jBSalvar});

        jTTabela.setModel(tmContato);
        jTTabela.setSelectionMode(ListSelectionM­odel.SINGLE_SELECTION); 
        lsmContato = jTTabela.getSelectionModel(); 
        lsmContato.addListSelectionListener(new ListSelectionListener() { 
            public void valueChanged(ListSelectionEvent e) { 
                if (! e.getValueIsAdjusting()){ 
                    JTtabelaLinhaSelecionada(jTTabela); 
                } 
            } 
        });
        jScrollPane1.setViewportView(jTTabela);

        javax.swing.GroupLayout jPGeralLayout = new javax.swing.GroupLayout(jPGeral);
        jPGeral.setLayout(jPGeralLayout);
        jPGeralLayout.setHorizontalGroup(
            jPGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPGeralLayout.setVerticalGroup(
            jPGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPGeralLayout.createSequentialGroup()
                .addComponent(jPPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPGeral, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        pesquisarContatos();
    }//GEN-LAST:event_jBPesquisarActionPerformed
    
     //Método para pesquisar contatos
    public void pesquisarContatos() {
        try {
            ContatoDao fazerOque = new ContatoDao();
            contatos = fazerOque.getLista("%" + jTPesquisa.getText() + "%");
            mostraPesquisa(contatos);
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema no método pesquisar contato" + ex);
        }
    
    }
    
    //Método para mostrar pesquisa no JTable
    private void mostraPesquisa(List<Contato> contatos) {
        
        while(tmContato.getRowCount() > 0){
            tmContato.removeRow(0);
        }
        
        if(contatos.size() <= 0){
           JOptionPane.showMessageDialog(null, "Nenhum contato encotrado.");
        
        } else {
           String[] linhas = new String[]{null, null, null, null};
           for (int  i = 0;  i < contatos.size();  i++) {
               tmContato.addRow(linhas);
               tmContato.setValueAt(contatos.get(i).getId(), i, 0);
               tmContato.setValueAt(contatos.get(i).getNome(), i, 1);
               tmContato.setValueAt(contatos.get(i).getEndereco(), i, 2);
               tmContato.setValueAt(contatos.get(i).getEmail(), i, 3);          
           }
        }
    }
    
    
    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
       
        if(validaCampos() == true){
            cadastrarContato();
            pesquisarContatos();
            limparCampos();

        }
        
    
    }//GEN-LAST:event_jBSalvarActionPerformed
    
    //Método para cadastrar contato
    private void cadastrarContato(){
        try {
            Contato contato = new Contato();
            contato.setNome(jTNome.getText());
            contato.setEndereco(jTEndereco.getText());
            contato.setEmail(jTEmail.getText());
            contato.setFone(jTFone.getText());
            contato.setSexo(jTSexo.getText());
           
            ContatoDao fazerOque = new ContatoDao();
            
            //Verificando dupicidade antes de cadastrar contato
            if(fazerOque.verificaDuplicidade(jTEmail.getText())){
                
                fazerOque.inserirContato(contato);
                JOptionPane.showMessageDialog(null, "Contato castrado com sucesso.");
            } else
                JOptionPane.showMessageDialog(null, "E-mail de contato já consta na nossa base de dados.");
                    
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema no método cadastrar." + ex);
            
        }
            
    }
    
    
     //Método para validar campos
    private boolean validaCampos(){
        if(jTNome.getText().isEmpty() | jTEndereco.getText().isEmpty() | jTEmail.getText().isEmpty() | 
           jTFone.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Obrigatório preencher todos os campos.");
            return false;
        }
        if(!"h,m".contains(jTSexo.getText())){
            JOptionPane.showMessageDialog(null, "Obrigatório escolher H ou M");
            return false;
        }
        
        return true;
    }
    
    
    private void jBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoActionPerformed
        //Habilitando dados para cadastro
        habilitaCampos();
        //Limpando campos
        limparCampos();
    }//GEN-LAST:event_jBNovoActionPerformed

    
    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
       alterarContato();
                
    }//GEN-LAST:event_jBAlterarActionPerformed
    
    //Alterar contatos
    private void alterarContato(){
        
        if(!validaCampos()){
            try {
                Contato contato = new Contato();
                ContatoDao fazerOque = new ContatoDao();
                
                contato.setId(Integer.parseInt(jTId.getText()));
                contato.setNome(jTNome.getText());
                contato.setEndereco(jTEndereco.getText());
                contato.setEmail(jTEmail.getText());
                contato.setFone(jTFone.getText());
                contato.setSexo(jTSexo.getText());
                fazerOque.alteraContato(contato);
                JOptionPane.showMessageDialog(null, "Contato alterado com sucesso");
                desabilitaCampos();
                pesquisarContatos();
                          
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Problema no método alterarContato" + ex);
                
            }
        }
     
    }
    
    
    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        int resp = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esse contato?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if(resp == JOptionPane.YES_OPTION){
            excluirContato();
        }
        
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jBSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBSairActionPerformed
    
    //Método para excluir contato
    private void excluirContato(){
        try {
            
            ContatoDao fazerOque = new ContatoDao();
            fazerOque.removerCotato(contatos.get(jTTabela.getSelectedRow()));
            JOptionPane.showMessageDialog(null, "Contato removido com sucesso.");
            pesquisarContatos();
            
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas no método remover." + ex);
        }
    }
    
    //Método para pegar linha selecionada
    private void JTtabelaLinhaSelecionada(JTable tabela){
        if(jTTabela.getSelectedRow() != -1) {
            habilitaCampos();
            jTId.setText(String.valueOf(contatos.get(tabela.getSelectedRow()).getId()));
            jTNome.setText(contatos.get(tabela.getSelectedRow()).getNome());
            jTEndereco.setText(contatos.get(tabela.getSelectedRow()).getEndereco());
            jTEmail.setText(contatos.get(tabela.getSelectedRow()).getEmail());
            jTFone.setText(contatos.get(tabela.getSelectedRow()).getFone());
            jTSexo.setText(contatos.get(tabela.getSelectedRow()).getSexo());
        
        } else {
            jTId.setText("");
            jTNome.setText("");
            jTEndereco.setText("");
            jTEmail.setText("");
            jTFone.setText("");
            jTSexo.setText("");
            
        }
    }
    
    //Método para limpar campos
    private void limparCampos(){
        jTId.setText("");
        jTNome.setText("");
        jTEndereco.setText("");
        jTEmail.setText("");
        jTFone.setText("");
        jTSexo.setText("");
    }
    
    //Método para desabilitar campos
    private void desabilitaCampos(){
        jTId.setEditable(false);
        jTNome.setEditable(false);
        jTEndereco.setEditable(false);
        jTEmail.setEditable(false);
        jTFone.setEditable(false);
        jTSexo.setEditable(false);
    }
    
    //Método para habilitar dados
    private void habilitaCampos(){
        jTNome.setEditable(true);
        jTEndereco.setEditable(true);
        jTEmail.setEditable(true);
        jTFone.setEditable(true);
        jTSexo.setEditable(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jTAgendaContatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jTAgendaContatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jTAgendaContatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jTAgendaContatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new jTAgendaContatos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBNovo;
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JButton jBSair;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JLabel jLEmail;
    private javax.swing.JLabel jLEnd;
    private javax.swing.JLabel jLFone;
    private javax.swing.JLabel jLId;
    private javax.swing.JLabel jLNome;
    private javax.swing.JLabel jLSexo;
    private javax.swing.JPanel jPButton;
    private javax.swing.JPanel jPForm;
    private javax.swing.JPanel jPGeral;
    private javax.swing.JPanel jPPesquisar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTEmail;
    private javax.swing.JTextField jTEndereco;
    private javax.swing.JTextField jTFone;
    private javax.swing.JTextField jTId;
    private javax.swing.JTextField jTNome;
    private javax.swing.JTextField jTPesquisa;
    private javax.swing.JTextField jTSexo;
    private javax.swing.JTable jTTabela;
    // End of variables declaration//GEN-END:variables

      
}
